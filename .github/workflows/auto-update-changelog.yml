# File: .github/workflows/auto-update-changelog.yml

name: Auto Update CHANGELOG

on:
  push:
    branches:
      - main

jobs:
  update-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changed files list
        id: detect
        run: |
          # Fetch full history so diff works reliably
          git fetch --no-tags origin main

          # List files changed in this push, filter by your directories
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep -E '^(audio/|lyrics/|metadata/|license-forms/)' > files.txt || true

          # Emit has_changes output for next steps
          if [ -s files.txt ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Append entries under [Unreleased]
        if: steps.detect.outputs.has_changes == 'true'
        run: |
          TODAY=$(date +'%Y-%m-%d')

          # Insert a dated subsection right after "## [Unreleased]"
          awk -v date="$TODAY" '
            BEGIN { inserted=0 }
            /^## \[Unreleased\]/ && !inserted {
              print
              print ""
              print "### " date
              print "- Added or Modified Files:"
              while ((getline line < "files.txt") > 0) {
                print "- " line
              }
              print ""
              inserted=1
              next
            }
            { print }
          ' CHANGELOG.md > CHANGELOG.tmp

          mv CHANGELOG.tmp CHANGELOG.md

      - name: Import GPG key (for signed commits)
        if: steps.detect.outputs.has_changes == 'true'
        run: |
          # Assumes your private key is stored in secrets as base64
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --batch --import

          # Configure Git to sign commits
          git config --global user.signingkey "${{ secrets.GPG_SIGNING_KEY_ID }}"
          git config --global commit.gpgSign true

      - name: Commit & push changelog update
        if: steps.detect.outputs.has_changes == 'true'
        run: |
          git config user.name "Auto Changelog Bot"
          git config user.email "noreply@github.com"

          git add CHANGELOG.md
          git commit -S -m "chore: update CHANGELOG for $(date +'%Y-%m-%d')" 
          git push